<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:clickable="true"
    tools:context=".MainActivity">

    <include
        android:id="@+id/maintoolbar"
        layout="@layout/maintoolbar" />


    <FrameLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:clickable="true">

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_below="@+id/maintoolbar"
            android:layout_weight="0.2"
            android:clickable="true"
            android:orientation="vertical">

            <!-- A DrawerLayout is intended to be used as the top-level content view using match_parent for both width and height to consume the full space available. -->
            <android.support.v4.widget.DrawerLayout xmlns:android="http://schemas.android.com/apk/res/android"
                xmlns:tools="http://schemas.android.com/tools"
                android:id="@+id/drawer_layout"
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                tools:context=".MainActivity">


                <!-- As the main content view, the view below consumes the entire
                     space available using match_parent in both dimensions. -->
                <FrameLayout
                    android:id="@+id/container"
                    android:layout_width="match_parent"
                    android:layout_height="match_parent"></FrameLayout>

                <!-- android:layout_gravity="start" tells DrawerLayout to treat
                     this as a sliding drawer on the left side for left-to-right
                     languages and on the right side for right-to-left languages.
                     If you're not building against API 17 or higher, use
                     android:layout_gravity="left" instead. -->
                <!-- The drawer is given a fixed width in dp and extends the full height of
                     the container. -->
                <fragment
                    android:id="@+id/navigation_drawer"
                    android:name="com.apps.darkone.redpitayascope.NavigationDrawerFragment"
                    android:layout_width="@dimen/navigation_drawer_width"
                    android:layout_height="match_parent"
                    android:layout_gravity="start"
                    tools:layout="@layout/fragment_navigation_drawer" />

            </android.support.v4.widget.DrawerLayout>

            <!--Other widgets-->
            <!--Custom second toolbar at the bottom with an accent color for the background.
                Additionally, you can set any custom property and make the height larger or smaller.-->

        </LinearLayout>

        <android.support.v7.widget.Toolbar
            android:id="@+id/toolbar_bottom"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_alignParentBottom="true"
            android:layout_alignParentStart="true"
            android:layout_gravity="center_horizontal|bottom"
            android:layout_weight="0.8"
            android:background="#2196F3"
            android:elevation="4dp"
            android:theme="@style/ThemeOverlay.AppCompat.ActionBar"
            app:popupTheme="@style/ThemeOverlay.AppCompat.Light">

            <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
                android:id="@+id/toolbar_bottom_layer"
                android:layout_width="fill_parent"
                android:layout_height="match_parent"
                android:orientation="vertical"></LinearLayout>


        </android.support.v7.widget.Toolbar>


    </FrameLayout>

</FrameLayout>